package com.app.Entities;

import java.util.ArrayList;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;

@Entity
@Table(name = "train")
@NoArgsConstructor
@AllArgsConstructor
@Setter
@Getter
@ToString
public class Train {

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private int trainid;

	@Column(name = "trainname", length = 30, nullable = false, unique = true)
	private String trainname;

	@Column(name = "source", length = 30, nullable = false, unique = true)
	private String source;

	@Column(name = "destination", length = 30, nullable = false, unique = true)
	private String destination;

	@ManyToOne(fetch = FetchType.EAGER) // Change this iff you want to lift admin details along with Train
	@JoinColumn(name = "admin_id", nullable = false) // not null constraint added on FK column
	private Admin myadmin;

	
	  @OneToMany(mappedBy = "train", fetch = FetchType.EAGER,cascade =
	  CascadeType.ALL, orphanRemoval = true) private List<BookTicket>
	  ticketlist=new ArrayList<>();
	  
	  @OneToMany(mappedBy = "user", fetch = FetchType.EAGER,cascade =
	  CascadeType.ALL, orphanRemoval = true) 
	  private List<User> userlist=new
	  ArrayList<>();
	  
	  @OneToMany(mappedBy = "payment", fetch = FetchType.EAGER,cascade =
	  CascadeType.ALL, orphanRemoval = true)
	  private List<Payment> paymentlist=new
	  ArrayList<>();
	  
	 

}
